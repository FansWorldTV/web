imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    charset:         UTF-8
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:
        default_locale: %locale%
        auto_start:     true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    # java: /usr/bin/java
    filters:
        cssrewrite: ~
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
        # closure:
        #     jar: %kernel.root_dir%/java/compiler.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    port:      %mailer_port%

jms_security_extra:
    secure_controllers:  true
    secure_all_services: false
    
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    group:
        group_class: Application\Sonata\UserBundle\Entity\Group
    registration:
        form:
            type: app_user_registration
            handler: app_user.registration.form.handler
        confirmation:
            enabled:    true
    profile:
        form:
            type: app_user_profile
    from_email:
        address:        info@fansworld.tv
        sender_name:    Fansworld
    service:
        mailer:         fos_user.mailer.twig_swift
    
fos_js_routing:
    routes_to_expose: [ ^((?!_(admin|assetic)_).)*$ ]
    
sonata_user:
    security_acl: true
    
stof_doctrine_extensions:
    default_locale: es_ES
    translation_fallback: true
    orm:
        default:
            sluggable:      true
            translatable:   true

jms_i18n_routing:
    default_locale: es
    locales: [en, es]
    strategy: prefix_except_default
    
sonata_media:
    db_driver: doctrine_orm # or doctrine_mongodb
    default_context: default
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                headeravatar: { width: 40 , height: 40 , quality: 90}
                avatar: { width: 50 , height: 50 , quality: 90}
                small: { width: 100 , quality: 90}
                small_square: { width: 100, height: 100 , quality: 90}
                mini_square: { width: 60, height: 60 , quality: 90}
                micro_square: { width: 22, height: 22, quality: 80}
                big_square: { width: 150, height: 150, quality: 90}
                video: { width: 100, height: 75 , quality: 90}
                medium: { width: 250 , quality: 90}
                splash:   { width: 500 , height: 225, quality: 90}
                big:   { width: 500 , quality: 90, constraint: false}
                wall: { width: 800 , quality: 90, constraint: false }
                huge:   { width: 1024 , quality: 90, constraint: false}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
            
sonata_admin:
    title:      Fansworld
    title_logo: /bundles/dodicifansworldadmin/images/logo_title.png
    templates:
        layout:  DodiciFansworldAdminBundle::standard_layout.html.twig
        user_block: DodiciFansworldAdminBundle:Core:user_block.html.twig
    security:
        handler: sonata.admin.security.handler.role
        
fos_facebook:
    file:   %kernel.root_dir%/../vendor/facebook/src/base_facebook.php
    alias:  facebook
    app_id: %facebook.app_id%
    secret: %facebook.app_secret%
    cookie: true
    permissions: [email, user_birthday, user_location, publish_actions]
    
fos_twitter:
    file: %kernel.root_dir%/../vendor/twitteroauth/twitteroauth/twitteroauth.php
    consumer_key: %twitter.app_key%
    consumer_secret: %twitter.app_secret%
    
artseld_openinviter:
    username: "fansworld"
    private_key: "6c0b090b7bf71fa484ab40de80beb21a"
    plugins_cache_time: "1800"
    plugins_cache_file: "oi_plugins.php"
    cookie_path: "../web/uploads"
    local_debug: "on_error"
    remote_debug: ""
    hosted: ""
    proxies: []
    stats: ""
    stats_user: ""
    stats_password: ""
    update_files: "1"
    transport: "curl"

parameters:
    sonata.user.admin.user.class: Application\Sonata\UserBundle\Admin\Entity\UserAdmin
    sonata.media.resizer.simple.class: Application\Sonata\MediaBundle\Media\SimpleResizer
    sonata.media.thumbnail.format: Application\Sonata\MediaBundle\Thumbnail\FormatThumbnail
        
services:
    liking.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\LikingCountUpdater
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    liking.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\LikingCountUpdater
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    tag.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\TagUpdater
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    tag.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\TagUpdater
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    notificator.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\Notificator
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    notificator.listener.update:
        class: Dodici\Fansworld\WebBundle\Listener\Notificator
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
    subscriptionnotificator.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\SubscriptionNotificator
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments:
            - "@service_container"
    subscriptionnotificator.listener.update:
        class: Dodici\Fansworld\WebBundle\Listener\SubscriptionNotificator
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
        arguments:
            - "@service_container"
    score.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\ScoreHandler
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    score.listener.update:
        class: Dodici\Fansworld\WebBundle\Listener\ScoreHandler
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
    score.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\ScoreHandler
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    comment.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\CommentCountUpdater
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    comment.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\CommentCountUpdater
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    album.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\AlbumImageSetter
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    album.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\AlbumImageSetter
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    album.listener.update:
        class: Dodici\Fansworld\WebBundle\Listener\AlbumImageSetter
        tags:
            - { name: doctrine.event_listener, event: postUpdate }
    event.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\EventUpdater
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    event.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\EventUpdater
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    opinionvote.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\OpinionCountUpdater
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    notification.listener.mailer:
        class: Dodici\Fansworld\WebBundle\Listener\NotificationMailer
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments:
            - "@service_container"
    meteor.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\MeteorPusher
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments:
            - "@service_container"
    badge.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\BadgeGiver
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    twitteractivity.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\TwitterActivity
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments:
            - "@service_container"
    facebookactivity.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\FacebookActivity
        tags:
            - { name: doctrine.event_listener, event: postPersist }
        arguments:
            - "@service_container"
    photovideocounter.listener.persist:
        class: Dodici\Fansworld\WebBundle\Listener\PhotoVideoCounter
        tags:
            - { name: doctrine.event_listener, event: postPersist }
    photovideocounter.listener.remove:
        class: Dodici\Fansworld\WebBundle\Listener\PhotoVideoCounter
        tags:
            - { name: doctrine.event_listener, event: postRemove }
    my.facebook.user:
        class: Dodici\Fansworld\WebBundle\Security\FacebookProvider
        arguments:
            facebook: "@fos_facebook.api"
            userManager: "@app_user.user_manager"
            validator: "@validator"
            container: "@service_container"
    appstate:
      class: Dodici\Fansworld\WebBundle\Services\AppState
      arguments: [@security.context, @doctrine.orm.entity_manager]
    app.facebook:
      class: Dodici\Fansworld\WebBundle\Services\AppFacebook
      arguments: [@security.context, @doctrine.orm.entity_manager, @fos_facebook.api, @appstate, @router, @translator,@appmedia, %fos_facebook.permissions%, %facebook.feed.enabled%]
    app.twitter:
      class: Dodici\Fansworld\WebBundle\Services\AppTwitter
      arguments: [@security.context, @doctrine.orm.entity_manager, @fos_twitter.api, @appstate, @router, @translator, %twitter.feed.enabled%]  
    fansworldmailer:
      class: Dodici\Fansworld\WebBundle\Services\FansworldMailer
      arguments: [@mailer, @templating,@security.context, @translator]  
    search:
      class: Dodici\Fansworld\WebBundle\Services\Search
      arguments: [@security.context, @doctrine.orm.entity_manager, @router, @appstate]
    meteor:
      class: Dodici\Fansworld\WebBundle\Services\Meteor
      arguments: [@doctrine.orm.entity_manager, @appstate, %meteor.host%, %meteor.port%, %meteor.clientport%, %meteor.debugmode%, %meteor.enabled%]
    applepush:
      class: Dodici\Fansworld\WebBundle\Services\ApplePush
      arguments: [%applepush.url%, %applepush.certificate%, %applepush.password%]
    tagger:
      class: Dodici\Fansworld\WebBundle\Services\Tagger
      arguments: [@doctrine.orm.entity_manager, @appstate]
    sharer:
      class: Dodici\Fansworld\WebBundle\Services\Sharer
      arguments: [@doctrine.orm.entity_manager, @security.context, @appstate, @messenger]
    messenger:
      class: Dodici\Fansworld\WebBundle\Services\Messenger
      arguments: [@doctrine.orm.entity_manager, @security.context, @appstate]
    commenter:
      class: Dodici\Fansworld\WebBundle\Services\Commenter
      arguments: [@doctrine.orm.entity_manager, @appstate]
    complainer:
      class: Dodici\Fansworld\WebBundle\Services\Complainer
      arguments: [@doctrine.orm.entity_manager, @appstate]
    visitator:
      class: Dodici\Fansworld\WebBundle\Services\Visitator
      arguments: [@security.context, @doctrine.orm.entity_manager, @session, @appstate]
    friender:
      class: Dodici\Fansworld\WebBundle\Services\Friender
      arguments: [@security.context, @doctrine.orm.entity_manager, @appstate]
    fanmaker:
      class: Dodici\Fansworld\WebBundle\Services\Fanmaker
      arguments: [@security.context, @doctrine.orm.entity_manager]
    subscriptions:
      class: Dodici\Fansworld\WebBundle\Services\Subscriptions
      arguments: [@security.context, @doctrine.orm.entity_manager]
    preferences:
      class: Dodici\Fansworld\WebBundle\Services\Preferences
      arguments: [@security.context, @doctrine.orm.entity_manager, @session, @appstate]
    fixture.csvtoyml:
      class: Dodici\Fansworld\WebBundle\Services\FixtureCsvToYaml
    eventship.manager:
      class: Dodici\Fansworld\WebBundle\Services\EventshipManager
      arguments: [@security.context, @doctrine.orm.entity_manager, @meteor]
    video.audience:
      class: Dodici\Fansworld\WebBundle\Services\VideoAudienceManager
      arguments: [@security.context, @doctrine.orm.entity_manager, @meteor]
    video.playlist:
      class: Dodici\Fansworld\WebBundle\Services\VideoPlaylist
      arguments: [@security.context, @doctrine.orm.entity_manager, @appstate]
    video.uploader:
      class: Dodici\Fansworld\WebBundle\Services\VideoUploader
      arguments: [@doctrine.orm.entity_manager, @flumotion.api.request, @flumotion.ftp, @appmedia, @security.context, %kernel.root_dir%/../web/uploads/videos]
    fansworld.kaltura.notification:
      class: Dodici\Fansworld\WebBundle\Services\FansworldKalturaNotification
      arguments: [@kaltura, @logger, @doctrine.orm.entity_manager, @video.uploader]
    feeder.event:
      class: Dodici\Fansworld\WebBundle\Feeder\EventFeeder
      arguments: [@doctrine.orm.entity_manager, @datafactory]
    feeder.event.minute:
      class: Dodici\Fansworld\WebBundle\Feeder\EventMinuteFeeder
      arguments: [@doctrine.orm.entity_manager, @datafactory]
    user.location:
      class: Dodici\Fansworld\WebBundle\Services\UserLocation
      arguments: [@doctrine.orm.entity_manager]
    contact.importer:
      class: Dodici\Fansworld\WebBundle\Services\ContactImporter
      arguments: [@service_container]
    twig.extension.appstate:
      class: Dodici\Fansworld\WebBundle\Extensions\AppStateExtension
      arguments: [@appstate]
      tags:
          - { name: twig.extension }
    twig.extension.search:
      class: Dodici\Fansworld\WebBundle\Extensions\SearchExtension
      arguments: [@search]
      tags:
          - { name: twig.extension }
    twig.extension.meteor:
      class: Dodici\Fansworld\WebBundle\Extensions\MeteorExtension
      arguments: [@meteor]
      tags:
          - { name: twig.extension }
    twig.extension.preferences:
      class: Dodici\Fansworld\WebBundle\Extensions\PreferencesExtension
      arguments: [@preferences]
      tags:
          - { name: twig.extension }
    twig.extension.subscriptions:
      class: Dodici\Fansworld\WebBundle\Extensions\SubscriptionsExtension
      arguments: [@subscriptions]
      tags:
          - { name: twig.extension }
    twig.extension.fanmaker:
      class: Dodici\Fansworld\WebBundle\Extensions\FanmakerExtension
      arguments: [@fanmaker]
      tags:
          - { name: twig.extension }
    twig.extension.text:
      class: Twig_Extensions_Extension_Text
      tags:
          - { name: twig.extension }
    appmedia:
      class: Dodici\Fansworld\WebBundle\Services\AppMedia
      arguments: [@sonata.media.pool, @sonata.media.manager.media, %appmedia.absoluteaux%]
    twig.extension.appmedia:
      class: Dodici\Fansworld\WebBundle\Extensions\AppMediaExtension
      arguments: [@appmedia]
      tags:
          - { name: twig.extension }
    twig.extension.appfacebook:
      class: Dodici\Fansworld\WebBundle\Extensions\AppFacebookExtension
      arguments: [@app.facebook]
      tags:
          - { name: twig.extension }
    app_user.registration.form.type:
        class: Application\Sonata\UserBundle\Form\Type\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: app_user_registration }
    app_user.registration.form.handler:
        class: Application\Sonata\UserBundle\Form\Handler\RegistrationFormHandler
        public: false
        scope: request
        arguments: [@fos_user.registration.form, @request, @fos_user.user_manager, @fos_user.mailer]
    app_user.profile.form.type:
        class: Application\Sonata\UserBundle\Form\Type\ProfileFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name: form.type, alias: app_user_profile }
    app_user.user_manager:
        class: Application\Sonata\UserBundle\Entity\UserManager
        public: false
        arguments: [@security.encoder_factory, @fos_user.util.username_canonicalizer, @fos_user.util.email_canonicalizer, @fos_user.entity_manager, %fos_user.model.user.class%]