imports:
    - { resource: parameters.ini }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          %secret%
    charset:         UTF-8
    router:          { resource: "%kernel.root_dir%/config/routing.yml" }
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    session:
        default_locale: %locale%
        auto_start:     true

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    # java: /usr/bin/java
    filters:
        cssrewrite: ~
        # closure:
        #     jar: %kernel.root_dir%/java/compiler.jar
        # yui_css:
        #     jar: %kernel.root_dir%/java/yuicompressor-2.4.2.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%

jms_security_extra:
    secure_controllers:  true
    secure_all_services: false
    
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Application\Sonata\UserBundle\Entity\User
    group:
        group_class: Application\Sonata\UserBundle\Entity\Group
    
fos_js_routing:
    routes_to_expose: [ .* ]
    
sonata_user:
    security_acl: true
    
stof_doctrine_extensions:
    default_locale: es_ES
    translation_fallback: true
    orm:
        default:
            sluggable:      true
            translatable:   true

jms_i18n_routing:
    default_locale: es
    locales: [en, es]
    strategy: prefix_except_default
    
sonata_media:
    db_driver: doctrine_orm # or doctrine_mongodb
    default_context: default
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false
            
sonata_admin:
    title:      Fansworld
    title_logo: /bundles/dodicifansworldadmin/images/logo_title.png
    templates:
        layout:  DodiciFansworldAdminBundle::standard_layout.html.twig
    security:
        handler: sonata.admin.security.handler.role

parameters:
    sonata.user.admin.user.class: Application\Sonata\UserBundle\Admin\Entity\UserAdmin
        
services:
    dodici.fansworld.adminbundle.admin.country:
        class: Dodici\Fansworld\AdminBundle\Admin\CountryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: country }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\Country, DodiciFansworldAdminBundle:CountryAdmin]
    dodici.fansworld.adminbundle.admin.city:
        class: Dodici\Fansworld\AdminBundle\Admin\CityAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: city }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\City, DodiciFansworldAdminBundle:CityAdmin]
    dodici.fansworld.adminbundle.admin.friendship:
        class: Dodici\Fansworld\AdminBundle\Admin\FriendshipAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: friendship }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\Friendship, DodiciFansworldAdminBundle:FriendshipAdmin]
    dodici.fansworld.adminbundle.admin.newscategory:
        class: Dodici\Fansworld\AdminBundle\Admin\NewsCategoryAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: newscategory }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\NewsCategory, DodiciFansworldAdminBundle:NewsCategoryAdmin]
    dodici.fansworld.adminbundle.admin.newspost:
        class: Dodici\Fansworld\AdminBundle\Admin\NewsPostAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: newspost }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\NewsPost, DodiciFansworldAdminBundle:NewsPostAdmin]
    dodici.fansworld.adminbundle.admin.video:
        class: Dodici\Fansworld\AdminBundle\Admin\VideoAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: video }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\Video, DodiciFansworldAdminBundle:VideoAdmin]
    dodici.fansworld.adminbundle.admin.comment:
        class: Dodici\Fansworld\AdminBundle\Admin\CommentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: dodicifansworldadminbundle, label: comment }
        arguments: [null, Dodici\Fansworld\WebBundle\Entity\Comment, DodiciFansworldAdminBundle:CommentAdmin]
    appstate:
      class: Dodici\Fansworld\WebBundle\Extensions\AppState
      arguments: [@session, @doctrine.orm.entity_manager]
    twig.extension.appstate:
      class: Dodici\Fansworld\WebBundle\Extensions\AppStateExtension
      arguments: [@appstate]
      tags:
          - { name: twig.extension }
    flumotion.api.request:
      class: Flumotion\APIBundle\Builder\RequestBuilder
      arguments: [ @doctrine, %flumotion.api_url%, %flumotion.api_key%, %flumotion.api_secret% ]
    flumotion.ftp:
      class: Flumotion\APIBundle\Ftp\FtpWriter
      arguments: [ @flumotion.api.request, %flumotion.ftp_host%, %flumotion.ftp_path%, %flumotion.ftp_file%, %flumotion.ftp_user%, %flumotion.ftp_pass% ]
    flumotiontwig:
      class: Flumotion\APIBundle\Extensions\FlumotionTwig
      arguments: [@session, @doctrine.orm.entity_manager, @flumotion.api.request, %flumotion.player_baseurl%, %flumotion.player_video_baseurl%]
    twig.extension.flumotiontwig:
      class: Flumotion\APIBundle\Extensions\FlumotionTwigExtension
      arguments: [@flumotiontwig]
      tags:
          - { name: twig.extension }
    twig.extension.text:
      class: Twig_Extensions_Extension_Text
      tags:
          - { name: twig.extension }