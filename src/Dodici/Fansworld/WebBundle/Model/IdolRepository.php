<?php

namespace Dodici\Fansworld\WebBundle\Model;

use Doctrine\ORM\EntityRepository;

/**
 * IdolRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IdolRepository extends CountBaseRepository
{

	/**
     * Search for idols with optional search term and pagination
     * @param \Application\Sonata\UserBundle\Entity\User $user
     * @param boolean $isidol (null|true|false)
     * @param string $filtername
     * @param int $limit
     * @param int $offset
     */
	public function SearchFront(\Application\Sonata\UserBundle\Entity\User $user, $filtername=null, $isidol=null, $limit=null, $offset=null) 
    {
    	$querystring = '
    	SELECT i, it
    	FROM \Dodici\Fansworld\WebBundle\Entity\Idol i
    	JOIN i.team it
    	WHERE
    	i.active = true
    	';
    	
    	if ($filtername) $querystring .=
    	'
    	AND
    	(
    		(i.firstname LIKE :filtername)
    		OR
    		(i.lastname LIKE :filtername)
    		OR
    		(i.nicknames LIKE :filtername)
    		OR
    		(i.content LIKE :filtername)
    		OR
    		(it.title LIKE :filtername)
    	)
    	';
    	
    	if ($isidol !== null) $querystring .=
    	'
    	AND
    	((SELECT COUNT(iss.id) FROM \Dodici\Fansworld\WebBundle\Entity\Idolship iss WHERE (iss.author = :userid AND iss.idol = i.id))
    	'.(($isidol === true) ? '>= 1' : ' = 0').'
    	)
    	';
    	
    	
    	
    	$querystring .= ' ORDER BY i.fanCount DESC';
    	
    	$query = $this->_em->createQuery($querystring)
    		->setParameter('userid', $user->getId());
    		
    	if ($filtername) $query = $query->setParameter('filtername', '%'.$filtername.'%');
    	
    	if ($limit !== null) $query = $query->setMaxResults($limit);
    	if ($offset !== null) $query = $query->setFirstResult($offset);
    	
    	return $query->getResult();
    	
    }
    
	/**
     * Count searched idols with optional search term
     * @param \Application\Sonata\UserBundle\Entity\User $user
     * @param boolean $isfriend (null|true|false)
     * @param string $filtername
     */
	public function CountSearchFront(\Application\Sonata\UserBundle\Entity\User $user, $filtername=null, $isidol=null) 
    {
    	$querystring = '
    	SELECT COUNT(i)
    	FROM \Dodici\Fansworld\WebBundle\Entity\Idol i
    	JOIN i.team it
    	WHERE
    	i.active = true
    	';
    	
    	if ($filtername) $querystring .=
    	'
    	AND
    	(
    		(i.firstname LIKE :filtername)
    		OR
    		(i.lastname LIKE :filtername)
    		OR
    		(i.nicknames LIKE :filtername)
    		OR
    		(i.content LIKE :filtername)
    		OR
    		(it.title LIKE :filtername)
    	)
    	';
    	
    	if ($isidol !== null) $querystring .=
    	'
    	AND
    	((SELECT COUNT(iss.id) FROM \Dodici\Fansworld\WebBundle\Entity\Idolship iss WHERE (iss.author = :userid AND iss.idol = i.id))
    	'.(($isidol === true) ? '>= 1' : ' = 0').'
    	)
    	';
    	
    	$query = $this->_em->createQuery($querystring)
    		->setParameter('userid', $user->getId());
    		
    	if ($filtername) $query = $query->setParameter('filtername', '%'.$filtername.'%');
    	
    	return $query->getSingleScalarResult();
    }
}