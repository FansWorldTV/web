<?php

namespace Dodici\Fansworld\WebBundle\Model;

use Doctrine\DBAL\Types\Type;
use Dodici\Fansworld\WebBundle\Entity\Privacy;

use Application\Sonata\UserBundle\Entity\User;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends CountBaseRepository
{
	public function wallEntity($entity,$user=null, $lastId = null,  $limit = null, $offset = null)
	{
		if ($entity instanceof \Application\Sonata\UserBundle\Entity\User) {
    		$classname = 'target';
    	} else {
    		$classname = $this->getType($entity);
    	}
    	$whereClause = '';
    	
	   
   	
		$query = $this->_em->createQuery('
    	SELECT c, cc
    	FROM \Dodici\Fansworld\WebBundle\Entity\Comment c
    	LEFT JOIN c.comments cc
    	WHERE c.'.$classname.' = :entity 
    	AND c.active = true
    	AND c.comment IS NULL
    	AND (:lastId IS NULL OR ( c.id < :lastId ))    	
    	AND
    	(
    		(c.privacy = :everyone)
    		OR
	    	(c.privacy = :friendsonly AND (:user IS NOT NULL) AND (
	    		(SELECT COUNT(f.id) FROM \Dodici\Fansworld\WebBundle\Entity\Friendship f WHERE (f.author = c.author AND f.target = :user) OR (f.target = c.author AND f.author = :user) AND f.active=true) >= 1
	    	))
    	)
    	
    	ORDER BY c.id DESC, cc.createdAt DESC
    	')
        	->setParameter('entity', $entity->getId(), Type::BIGINT)
            ->setParameter('everyone', Privacy::EVERYONE)
        	->setParameter('friendsonly', Privacy::FRIENDS_ONLY)
        	->setParameter('user', ($user instanceof User) ? $user->getId() : null)
            ->setParameter('lastId', $lastId);
        
        if ($limit !== null)
            $query = $query->setMaxResults((int)$limit);
        if ($offset !== null)
            $query = $query->setFirstResult((int)$offset);
        
        return $query->getResult();
	}
	
	
}